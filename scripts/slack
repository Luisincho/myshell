#!/usr/bin/env bash

# Description: Sends message to slack channel from first positional argument or stdin.

json_init() {
    TMP_FILE=$(mktemp)
    echo "{}" >"$TMP_FILE"
}

json_set() {
    key="$1"
    value=${*:2}

    content=$(jq ".$key = \"$value\"" "$TMP_FILE") && echo "$content" >"$TMP_FILE"
}

json_destroy() {
    rm "$TMP_FILE"
}

[ ! "$LOCAL_SLACK_WEBHOOK" ] && echo "LOCAL_SLACK_WEBHOOK environment variable is not defined" && exit 1

CHANNEL="#general"
USERNAME=""
ICON=":computer:"

options=$(getopt --long channel:,username:,icon: --options "" -- "$@")
eval set -- "$options"

while true; do
    case $1 in
    --icon)
        ICON="$2"
        shift 2
        ;;
    --username)
        USERNAME="$2"
        shift 2
        ;;
    --channel)
        CHANNEL="$2"
        shift 2
        ;;
    --)
        MESSAGE="${*:2}"
        shift
        break
        ;;
    *)
        echo "Internal error!"
        exit 1
        ;;
    esac
done

if [ -z "$MESSAGE" ]; then
    MESSAGE=$(cat)
fi

[ -z "$MESSAGE" ] && echo "A message must be given, either from positional argument or stdin." && exit 1

# INVOKER=$(ps -ocmd= -p $PPID)
FROM="$(whoami)@$(hostname)"
MESSAGE="\`\`\`$MESSAGE\`\`\`\n>Sent from *$FROM*\n>_$0_"

json_init
json_set channel "$CHANNEL"
json_set username "${USERNAME:-$FROM}"
json_set text "$MESSAGE"
json_set icon_emoji "$ICON"
payload=$(cat "$TMP_FILE")
json_destroy

response=$(curl -X POST --fail --show-error --silent --data-urlencode "payload=$payload" "$LOCAL_SLACK_WEBHOOK") || {
    echo "Some error happened $response"
    exit 1
}
