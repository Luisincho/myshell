#! /bin/env bash

# Description: OpenAI gpt chat

SCRIPT_PATH="$(dirname "$(readlink -f "$0")")"
ROLES_PATH=$(realpath "$SCRIPT_PATH/../assets/gpt/roles")

DEFAULT_MODEL="gpt-3.5-turbo"
OPENAI_MODEL=""
ROLE=""
FULL_RESPONSE=0

gpt() {
    model=${OPENAI_MODEL:-$DEFAULT_MODEL}

    if [ "$ROLE" ]; then
        role_file=$ROLES_PATH/$ROLE
        role_content=$(cat "$role_file")
    else
        role_content=""
    fi

    if [ "$role_content" ]; then
        role_json_message=$(jq -Rs '. as $content | {role: "system", content: $content}' <<< "$role_content")
        role_json_message="$role_json_message,"
    else
        role_json_message=""
    fi

    curl -s https://api.openai.com/v1/chat/completions \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $OPENAI_API_KEY" \
        -d "{
        \"model\": \"$model\",
        \"messages\": [
            $role_json_message
            {\"role\": \"user\", \"content\": \"$*\"}
        ]
    }"
}

parse-message() {
    jq -r '.choices[].message.content'
}

# Options and arguments parsing

options=$(getopt -o hfm:r: --long help,full-response,model:,role:,list-roles,list-models -- "$@")
eval set -- "$options"

while true; do
    case "$1" in
        -h | --help)
            printf "Usage: %s <message>\n" "$(basename "$0")"
            exit 0
            ;;
        -f | --full-response)
            FULL_RESPONSE=1
            shift
            ;;
        -m | --model)
            OPENAI_MODEL="$2"
            shift 2
            ;;
        -r | --role)
            ROLE="$2"
            shift 2
            ;;
        --list-roles)
            ls "$ROLES_PATH" | awk -F. '{print $1}'
            exit 0
            ;;
        --list-models)
            echo "gpt-3.5-turbo-16k"
            echo "gpt-3.5-turbo"
            exit 0
            ;;
        --)
            shift
            break
            ;;
    esac
done

if [ "$FULL_RESPONSE" -eq 1 ]; then
    # shellcheck disable=2068
    gpt $@ | jq .
else
    # shellcheck disable=2068
    gpt $@ | parse-message
fi
